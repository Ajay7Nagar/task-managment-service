version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: task-management-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-taskmanagement_prod}
      POSTGRES_USER: ${POSTGRES_USER:-taskuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - task-management-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-taskuser} -d ${POSTGRES_DB:-taskmanagement_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: task-management-app-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-taskmanagement_prod}
      DATABASE_USERNAME: ${POSTGRES_USER:-taskuser}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      SERVER_PORT: 8080
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task-management-network
    volumes:
      - ./logs:/app/logs
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

volumes:
  postgres_prod_data:

networks:
  task-management-network:
    driver: bridge