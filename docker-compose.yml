version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: task-management-postgres
    environment:
      POSTGRES_DB: taskmanagement_dev
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskuser -d taskmanagement_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: task-management-app
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DATABASE_URL: jdbc:postgresql://postgres:5432/taskmanagement_dev
      DATABASE_USERNAME: taskuser
      DATABASE_PASSWORD: taskpass
      JWT_SECRET: mySecretKeyForProductionMustBeLongerAndMoreSecure
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task-management-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: task-management-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@taskmanagement.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - task-management-network
    profiles:
      - admin

volumes:
  postgres_data:

networks:
  task-management-network:
    driver: bridge